{"ast":null,"code":"import _classCallCheck from \"/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/src/MapFinder.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport { Row, Col, Container, Form, Input } from 'reactstrap';\nimport * as d3 from 'd3';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      cities: [],\n      lat: 51.505,\n      long: -0.09\n    };\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateState\",\n    value: function updateState(results) {\n      this.setState({\n        cities: results\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cityList = [{\n        country: 'Afghanistan',\n        name: 'Kabul',\n        lat: 34.5166667,\n        long: 69.1833344\n      }];\n      d3.csv(\"https://raw.githubusercontent.com/bahar/WorldCityLocations/master/World_Cities_Location_table.csv\").then(function (data) {\n        for (var i = 0; i < data.length; i++) {\n          cityList.push({\n            country: data[i].Afghanistan,\n            name: data[i].Kabul,\n            lat: parseFloat(data[i][34.5166667]),\n            long: parseFloat(data[i][69.1833344])\n          });\n        }\n      }).then(function () {\n        _this2.updateState(cityList);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(cityName) {\n      this.setState(function (state) {\n        console.log(state.cities);\n        console.log(cityName);\n        var currentCity = {}; // state.cities.filter(['Kabul', cityName]);\n\n        state.cities.forEach(function (city) {\n          if (city.name === cityName) {\n            currentCity = city;\n          }\n        }); // cities.filter((city) => city.name.toLowerCase() == cityName.toLowerCase());\n        // let currentCity = state.cities[3];\n\n        console.log(currentCity);\n        state.lat = currentCity.lat;\n        state.long = currentCity.long;\n        return state;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Safety\"), React.createElement(CityForm, {\n        search: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"In any major city, zoom in to find hospital locations marked with a red cross.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Emergency Phone Number: \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"9-1-1\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Nearest Emergency Room: \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Virginia Mason \")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Non-Emergency Police Phone Number: \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"206-625-5011\"))), React.createElement(Row, {\n        className: \"px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(CityMap, {\n        lat: this.state.lat,\n        lng: this.state.long,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"This is an example of a few bits of emergency information that would be provided for a user that has selected Seattle as their location. Other examples of resources could be pest control, poison control, or fire department.\"), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Project by Lauren Smith\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n\nvar CityMap =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(CityMap, _Component2);\n\n  function CityMap() {\n    _classCallCheck(this, CityMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CityMap).apply(this, arguments));\n  }\n\n  _createClass(CityMap, [{\n    key: \"render\",\n    value: function render() {\n      var position = [this.props.lat, this.props.lng];\n      return React.createElement(Map, {\n        center: position,\n        zoom: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CityMap;\n}(Component);\n\nvar CityForm =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(CityForm, _Component3);\n\n  function CityForm(props) {\n    var _this3;\n\n    _classCallCheck(this, CityForm);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(CityForm).call(this, props));\n    _this3.state = {\n      city: ''\n    };\n    _this3.handleChange = _this3.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(CityForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        city: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      //console.log('handleSubmit');\n      event.preventDefault();\n      this.props.search(this.state.city);\n    } // render() {\n    //     return (\n    //         <div className='form-inline'>\n    //             Search for a major city...\n    //         <div className=\"mr-3\">\n    //                 <input type=\"text\" name=\"term\" id=\"searchQuery\" className=\"form-control\" />\n    //             </div>\n    //             <button type=\"submit\" className=\"btn btn-primary\">\n    //                 Search!\n    //         </button>\n    //         </div>\n    //     )\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Search for a major city...\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.city,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CityForm;\n}(Component);\n\n{\n  /* <div class='form-inline'>\n             Search for a major city...\n             <div class=\"mr-3\">\n                 <input type=\"text\" name=\"term\" id=\"searchQuery\" class=\"form-control\">\n             </div>\n             <button type=\"submit\" class=\"btn btn-primary\">\n                 Search!\n             </button>\n         </div> */\n}","map":{"version":3,"sources":["/Users/laurensmith/Desktop/UW/info 340/stage-3-Tyler-Lauren/src/MapFinder.js"],"names":["React","Component","Map","TileLayer","Row","Col","Container","Form","Input","d3","App","props","state","cities","lat","long","search","bind","updateState","results","setState","cityList","country","name","csv","then","data","i","length","push","Afghanistan","Kabul","parseFloat","catch","err","console","log","cityName","currentCity","forEach","city","CityMap","position","lng","CityForm","handleChange","handleSubmit","event","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport {\n  Row,\n  Col,\n  Container,\n  Form,\n  Input\n} from 'reactstrap';\n\nimport * as d3 from 'd3';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: [],\n      lat: 51.505,\n      long: -0.09\n    }\n\n    this.search = this.search.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState(results) {\n    this.setState({ cities: results });\n  }\n\n  componentDidMount() {\n    let cityList = [{\n      country: 'Afghanistan',\n      name: 'Kabul',\n      lat: 34.5166667,\n      long: 69.1833344\n    }];\n\n    d3.csv(\"https://raw.githubusercontent.com/bahar/WorldCityLocations/master/World_Cities_Location_table.csv\").then(function (data) {\n\n      for (let i = 0; i < data.length; i++) {\n        cityList.push({\n          country: data[i].Afghanistan,\n          name: data[i].Kabul,\n          lat: parseFloat(data[i][34.5166667]),\n          long: parseFloat(data[i][69.1833344])\n        });\n      }\n    }).then(() => {\n      this.updateState(cityList);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  search(cityName) {\n    this.setState((state) => {\n      console.log(state.cities);\n      console.log(cityName);\n      let currentCity = {}; // state.cities.filter(['Kabul', cityName]);\n\n      state.cities.forEach((city) => {\n        if (city.name === cityName) {\n          currentCity = city;\n        }\n      });\n\n      // cities.filter((city) => city.name.toLowerCase() == cityName.toLowerCase());\n      // let currentCity = state.cities[3];\n      console.log(currentCity);\n      state.lat = currentCity.lat;\n      state.long = currentCity.long;\n      return state;\n    })\n  }\n\n  render() {\n    return (\n      <body>\n        <Container>\n          <h2>Safety</h2>\n          <CityForm search={this.search} />\n          <Row className=\"px-3\">\n              <p>In any major city, zoom in to find hospital locations marked with a red cross.</p>\n              <li>Emergency Phone Number: <em>9-1-1</em></li>\n              <li>Nearest Emergency Room: <em>Virginia Mason </em></li>\n              <li>Non-Emergency Police Phone Number: <em>206-625-5011</em></li>\n            \n          </Row>\n          <Row className=\"px-3\">\n          <CityMap lat={this.state.lat} lng={this.state.long} />\n          </Row>\n        </Container>\n        <div>\n          This is an example of a few bits of emergency information that would be provided for a\n          user that has selected Seattle as their location. Other examples of resources could be\n          pest control, poison control, or fire department.\n                </div>\n        <footer>Project by Lauren Smith</footer>\n      </body>\n    )\n  }\n}\n\nclass CityMap extends Component {\n  render() {\n    const position = [this.props.lat, this.props.lng]\n    return (\n      <Map center={position} zoom={13}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </Map>\n    )\n  }\n}\n\n\nclass CityForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { city: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ city: event.target.value });\n  }\n\n  handleSubmit(event) {\n    //console.log('handleSubmit');\n    event.preventDefault();\n    this.props.search(this.state.city);\n  }\n\n  // render() {\n  //     return (\n  //         <div className='form-inline'>\n  //             Search for a major city...\n  //         <div className=\"mr-3\">\n  //                 <input type=\"text\" name=\"term\" id=\"searchQuery\" className=\"form-control\" />\n  //             </div>\n  //             <button type=\"submit\" className=\"btn btn-primary\">\n  //                 Search!\n  //         </button>\n  //         </div>\n  //     )\n  // }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Search for a major city...\n            <input type=\"text\" value={this.state.city} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\n{/* <div class='form-inline'>\n            Search for a major city...\n            <div class=\"mr-3\">\n                <input type=\"text\" name=\"term\" id=\"searchQuery\" class=\"form-control\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">\n                Search!\n            </button>\n        </div> */}\n\n"]},"metadata":{},"sourceType":"module"}