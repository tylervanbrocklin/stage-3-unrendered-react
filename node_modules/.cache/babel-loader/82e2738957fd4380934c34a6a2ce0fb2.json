{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.description = exports.fail = exports.pass = undefined;\n\nvar _util = require('../util');\n\nexports.default = {\n  msg: 'You have an `onClick` handler but did not define an `onKeyDown`, `onKeyUp` or `onKeyPress` handler. ' + 'Add it, and have the \"Space\" key do the same thing as an `onClick` handler.',\n  url: 'https://www.w3.org/WAI/GL/wiki/Making_actions_keyboard_accessible_by_using_keyboard_event_handlers_with_WAI-ARIA_controls',\n  affects: [_util.devices.keyboardOnly],\n  test: function test(tagName, props) {\n    (0, _util.warnRuleDeprecated)('button-role-space', 'click-events-have-key-events');\n    var hidden = (0, _util.hiddenFromAT)(props);\n    var onClick = (0, _util.listensTo)(props, 'onClick');\n    var onKeyDown = (0, _util.listensTo)(props, 'onKeyDown');\n    var onKeyUp = (0, _util.listensTo)(props, 'onKeyUp');\n    var onKeyPress = (0, _util.listensTo)(props, 'onKeyPress'); // rule passes when element is hidden,\n    // has onClick and has an onKeyDown, onKeyUp or onKeyPress prop\n\n    return hidden || !onClick || onKeyDown || onKeyUp || onKeyPress;\n  }\n};\nvar pass = exports.pass = [{\n  when: 'there is an onClick handler and there is an onKeyDown handler.',\n  // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n  render: function render(React) {\n    return React.createElement('div', {\n      onClick: _util.fn,\n      onKeyDown: _util.fn\n    });\n  }\n}, {\n  when: 'there is an onClick handler and there is an onKeyUp handler.',\n  // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n  render: function render(React) {\n    return React.createElement('div', {\n      onClick: _util.fn,\n      onKeyUp: _util.fn\n    });\n  }\n}, {\n  when: 'there is an onClick handler and there is an onKeyPress handler.',\n  // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n  render: function render(React) {\n    return React.createElement('div', {\n      onClick: _util.fn,\n      onKeyPress: _util.fn\n    });\n  }\n}, {\n  when: 'there is no onClick',\n  render: function render(React) {\n    return React.createElement('div', null, 'derp');\n  }\n}, {\n  when: 'the element is aria-hidden',\n  render: function render(React) {\n    return React.createElement('div', {\n      'aria-hidden': true,\n      role: 'button'\n    });\n  }\n}];\nvar fail = exports.fail = [{\n  when: 'there is an onClick handler but no `onKeyDown`, `onKeyUp` or `onKeyPress` is present',\n  render: function render(React) {\n    return React.createElement('div', {\n      onClick: _util.fn\n    });\n  }\n}];\nvar description = exports.description = '\\nEnforce that elements which have the `role=\"button\"`\\nalso have an `onKeyDown` or `onKeyPress` handler that handles Space or Enter\\n(this is isn\\'t actually checked) for people that are using a\\nkeyboard-only device.\\n';","map":null,"metadata":{},"sourceType":"script"}