{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.description = exports.pass = exports.fail = undefined;\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar roles = (0, _keys2.default)(_util.role);\nexports.default = [{\n  msg: 'Elements with ARIA roles must use a valid, non-abstract ARIA role.',\n  url: 'https://www.w3.org/TR/wai-aria/roles',\n  AX: 'AX_ARIA_01',\n  test: function test(tagName, props) {\n    var hasRole = (0, _util.hasProp)(props, 'role');\n    return !hasRole || roles.indexOf(props.role) >= 0;\n  }\n}];\nvar fail = exports.fail = [{\n  when: 'there is an invalid `role`',\n  // eslint-disable-next-line jsx-a11y/aria-role\n  render: function render(React) {\n    return React.createElement('div', {\n      role: 'foo'\n    });\n  }\n}];\nvar pass = exports.pass = [{\n  when: 'there is a role and it is valid',\n  render: function render(React) {\n    return React.createElement('div', {\n      role: 'button'\n    });\n  }\n}, {\n  when: 'there is no `role`',\n  render: function render(React) {\n    return React.createElement('div', null);\n  }\n}];\nvar description = exports.description = '\\nThe ARIA roles model requires that elements with a role attribute use a valid,\\nnon-abstract ARIA role. Each non-abstract ARIA role is mapped on to a known set\\nof behavior by the user agent or assistive technology, so using an unknown role\\nwill result in the desired behavior not being available to the user.\\n\\nYou can find a list of valid ARIA roles, along with descriptions and information\\non additional required attributes, on the\\n[WAI-ARIA](http://www.w3.org/TR/wai-aria/roles#roles_categorization) site.\\n';","map":null,"metadata":{},"sourceType":"script"}