{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.description = exports.fail = exports.pass = undefined;\n\nvar _util = require('../util');\n\nexports.default = [{\n  tagName: 'label',\n  msg: 'Form controls using a label to identify them must be ' + 'programmatically associated with the control using htmlFor',\n  url: 'https://www.w3.org/WAI/tutorials/forms/labels',\n  test: function test(tagName, props) {\n    var hidden = (0, _util.hiddenFromAT)(props);\n    var hasfor = typeof props.htmlFor === 'string';\n    return hidden || hasfor;\n  }\n}];\nvar pass = exports.pass = [{\n  when: 'the label is hidden',\n  // eslint-disable-next-line jsx-a11y/label-has-for\n  render: function render(React) {\n    return React.createElement('label', {\n      'aria-hidden': true\n    });\n  }\n}, {\n  when: 'the label has a valid `htmlFor` prop',\n  render: function render(React) {\n    return React.createElement('label', {\n      htmlFor: 'foo'\n    });\n  }\n}, {\n  when: 'it is not a label',\n  render: function render(React) {\n    return React.createElement('div', null);\n  }\n}];\nvar fail = exports.fail = [{\n  when: 'a label is not hidden and has no `htmlFor`',\n  // eslint-disable-next-line jsx-a11y/label-has-for\n  render: function render(React) {\n    return React.createElement('label', null);\n  }\n}];\nvar description = exports.description = '\\nEnforce label tags have `htmlFor` attribute. Form controls using a `label` to\\nidentify them must have only one label that is programmatically associated with\\nthe control using: `<label htmlFor={/* ID or name of control*/}>...</label>`.\\n';","map":null,"metadata":{},"sourceType":"script"}