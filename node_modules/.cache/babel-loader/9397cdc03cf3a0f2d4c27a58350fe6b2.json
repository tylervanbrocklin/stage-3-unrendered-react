{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nexports.default = function () {\n  // signature is a11y(React, opts) or a11y(React, ReactDOM, opts)\n  // so destructure args based on number of args passed\n  var props = [];\n\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  if (args.length === 2) {\n    if (args[1].findDOMNode === undefined) {\n      props = [args[0], null, args[1] || {}];\n    } else {\n      props = [args[0], args[1], {}];\n    }\n  } else {\n    props = args;\n  }\n\n  var _props = props,\n      _props2 = (0, _slicedToArray3.default)(_props, 3),\n      React = _props2[0],\n      ReactDOM = _props2[1],\n      opts = _props2[2];\n\n  if (!React || !React.createElement) {\n    throw new Error(LOG_PREFIX + ' missing argument \\'React\\'');\n  } // make sure ReactDOM is passed in in browser code\n\n\n  if (_util.browser && !(ReactDOM && ReactDOM.findDOMNode)) {\n    throw new Error(LOG_PREFIX + ' missing argument \\'ReactDOM\\'');\n  }\n\n  deprecate(opts, 'includeSrcNode', msg);\n  deprecate(opts, 'throw', msg);\n  deprecate(opts, 'warningPrefix', msg);\n  var _opts$reporter = opts.reporter,\n      reporter = _opts$reporter === undefined ? mkReporter(opts) : _opts$reporter,\n      _opts$filterFn = opts.filterFn,\n      filterFn = _opts$filterFn === undefined ? always : _opts$filterFn,\n      _opts$plugins = opts.plugins,\n      plugins = _opts$plugins === undefined ? [] : _opts$plugins,\n      _opts$rules = opts.rules,\n      rules = _opts$rules === undefined ? {} : _opts$rules;\n  return {\n    React: React,\n    ReactDOM: ReactDOM,\n    filterFn: filterFn,\n    reporter: reporter,\n    plugins: plugins,\n    rules: rules\n  };\n};\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar LOG_PREFIX = '[react-a11y]:';\n/**\n * Throws an error based on the warning\n * If the last argument is a DOM node, it\n * coerces it to a string before throwing.\n * @returns {undefined}\n */\n\n/* eslint-disable babel/new-cap,no-console */\n\nvar throwError = function throwError() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var last = args[args.length - 1];\n\n  if (last.outerHTML) {\n    args[args.length - 1] = 'Element: \\n  ' + last.outerHTML;\n  }\n\n  var error = new Error(args.join(' '));\n  error.element = last;\n  throw error;\n};\n/**\n * Show a warning\n * @returns {undefined}\n */\n\n\nvar showWarning = function showWarning() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (_util.browser) {\n    var _console;\n\n    (_console = console).warn.apply(_console, args);\n  } else {\n    console.warn(args.join('\\n  '));\n  }\n};\n/**\n * Creates a reporter function based on deprecated options\n * @arg {object} opts - The options passed by the user\n * @returns {function} The reporter\n */\n\n\nvar mkReporter = function mkReporter(opts) {\n  var _opts$doThrow = opts.doThrow,\n      doThrow = _opts$doThrow === undefined ? false : _opts$doThrow,\n      _opts$warningPrefix = opts.warningPrefix,\n      warningPrefix = _opts$warningPrefix === undefined ? LOG_PREFIX : _opts$warningPrefix;\n  return function (info) {\n    var msg = info.msg,\n        displayName = info.displayName,\n        DOMNode = info.DOMNode,\n        url = info.url,\n        tagName = info.tagName,\n        severity = info.severity,\n        AX = info.AX; // build warning\n\n    var warning = [warningPrefix, (displayName || tagName) + ' - ' + msg].concat((0, _toConsumableArray3.default)(url ? ['See \\'' + url + '\\' for more info.'] : []), (0, _toConsumableArray3.default)(AX ? ['See \\'' + (0, _util.AXURL)(AX) + '\\' for more info.'] : []), [DOMNode || tagName]);\n\n    if (doThrow || severity === 'error') {\n      throwError.apply(undefined, (0, _toConsumableArray3.default)(warning));\n    } else {\n      showWarning.apply(undefined, (0, _toConsumableArray3.default)(warning));\n    }\n  };\n};\n/**\n * Generate a deprecation warning when a key is present\n * in the options object\n * @arg {object} opts - the options object under scrutiny\n * @arg {string} name - the name of the deprecated option\n * @arg {string} msg  - an optional reason for the deprecation\n * @returns {undefined}\n */\n\n\nvar deprecate = function deprecate(opts, name) {\n  var msg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (name in opts) {\n    console.warn(LOG_PREFIX + ' the `' + name + '` options is deprecated. ' + msg);\n  }\n};\n/**\n * Make a certain option mandatory\n * @arg {object} opts - the options object under scrutiny\n * @arg {string} name - the name of the mandatory option\n * @arg {string} msg  - an optional reason\n * @returns {undefined}\n */\n\n\nvar mandatory = function mandatory(opts, name) {\n  var msg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (!(name in opts)) {\n    throw new Error(LOG_PREFIX + ' the `' + name + '` option is mandatory. ' + msg);\n  }\n}; // always resolve to true\n\n\nvar always = function always() {\n  return true;\n}; // deprecation message\n\n\nvar msg = 'Use the `reporter` option to change how warnings are displayed.';\n/**\n * Normalize and validate the options that the user passed in.\n * @arg {object} opts - The opts the user passed in\n * @returns {object} the validated options\n */","map":null,"metadata":{},"sourceType":"script"}