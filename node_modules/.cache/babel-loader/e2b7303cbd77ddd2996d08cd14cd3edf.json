{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.description = exports.fail = exports.pass = undefined;\n\nvar _util = require('../util');\n\nexports.default = [{\n  msg: 'You have `aria-hidden=\"true\"` applied to an interactive element but have not ' + 'removed it from the tab flow. This could result in a hidden tab stop for ' + 'users of screen readers.',\n  url: 'http://john.foliot.ca/aria-hidden',\n  affects: [_util.devices.keyboardOnly, _util.devices.screenReaders],\n  test: function test(tagName, props) {\n    var hidden = (0, _util.hiddenFromAT)(props);\n    var interactive = (0, _util.isInteractive)(tagName, props);\n    var tabIndex = props.tabIndex === -1;\n    return !hidden || !interactive || tabIndex;\n  }\n}];\nvar pass = exports.pass = [{\n  when: 'an interactive element is aria-hidden and has tabindex=\"-1\"',\n  render: function render(React) {\n    return React.createElement('input', {\n      'aria-hidden': true,\n      tabIndex: -1\n    });\n  }\n}, {\n  when: 'the element is not interactive',\n  render: function render(React) {\n    return React.createElement('div', {\n      'aria-hidden': true\n    });\n  }\n}, {\n  when: 'an interactive element is not aria-hidden',\n  render: function render(React) {\n    return React.createElement('input', null);\n  }\n}];\nvar fail = exports.fail = [{\n  when: 'an interactive element is hidden but has no tabindex',\n  render: function render(React) {\n    return React.createElement('input', {\n      'aria-hidden': true\n    });\n  }\n}, {\n  when: 'an interactive element is hidden but has a bad tabindex',\n  // eslint-disable-next-line jsx-a11y/tabindex-no-positive\n  render: function render(React) {\n    return React.createElement('input', {\n      'aria-hidden': true,\n      tabIndex: 2\n    });\n  }\n}];\nvar description = exports.description = '\\nEnforce that interactive elements that have been removed from\\nthe accessibility tree usign `aria-hidden` are also removed from\\nthe tab flow by setting `tabIndex={-1}`.  If not, this could result\\nin a hidden tab stop for screen reader users.\\n';","map":null,"metadata":{},"sourceType":"script"}